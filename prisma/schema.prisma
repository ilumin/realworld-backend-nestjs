// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  username String  @unique
  bio      String?
  image    String?

  articles  Article[]
  comments  Comment[]
  favorited UsersFavoritArticles[]
}

model Article {
  id          Int      @id @default(autoincrement())
  slug        String   @unique
  title       String
  description String
  body        String
  createdAt   DateTime @default(now())
  createdBy   Int?
  updatedAt   DateTime @default(now())
  updatedBy   Int?

  comments  Comment[]
  tags      TagsOnArticles[]
  favorited UsersFavoritArticles[]

  author   User @relation(fields: [authorId], references: [id])
  authorId Int
}

model Comment {
  id        Int      @id @default(autoincrement())
  body      String
  createdAt DateTime @default(now())

  Article   Article @relation(fields: [articleId], references: [id])
  articleId Int
  User      User    @relation(fields: [userId], references: [id])
  userId    Int
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String

  articles TagsOnArticles[]
}

model TagsOnArticles {
  article   Article  @relation(fields: [articleId], references: [id])
  articleId Int
  tag       Tag      @relation(fields: [tagId], references: [id])
  tagId     Int
  createdAt DateTime @default(now())

  @@id([articleId, tagId])
}

model UsersFavoritArticles {
  Article   Article  @relation(fields: [articleId], references: [id])
  articleId Int
  User      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())

  @@id([articleId, userId])
}
